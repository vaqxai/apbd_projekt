@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using apbd_projekt.Shared
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor
@attribute [Authorize]


<div class="card" style="height:100%; width:100%">
    @if(StockDays == null || StockDays.Count == 0)
    {
        <div class="alert alert-info">Loading</div>
    }else
    {
        <div class="card-body" id="ControlRegion">
            @try
            {
	            <SfStockChart Title="@Ticker" Theme="Theme.Bootstrap5" EnablePeriodSelector="true" EnableSelector="true">
                <StockChartSeriesCollection>
                    <StockChartSeries DataSource="@StockDays" Type="ChartSeriesType.Candle" XName="Date" YName="Open"
                                      High="High" Low="Low" Open="Open" Close="Close" Volume="Volume" Name="Google">
                    </StockChartSeries>
                </StockChartSeriesCollection>
                </SfStockChart>
            } catch (NullReferenceException e)
            {
                Console.Out.WriteLine("Yu dun goofed up: " + e.Message);
            }

        </div>        
    }

</div>

@code {
    #pragma warning disable CS8618 // Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.

    [Parameter]
    public string Ticker { get; set; } = "";

    [Parameter]
    public ICollection<StockDay> StockDays { get; set; } = new List<StockDay>();
}